apiVersion: v1
kind: ConfigMap
metadata:
  name: schema-publisher-config
  namespace: kafka
data:
  hello.py: |
    #!/usr/bin/env python3
    import os
    import sys
    from confluent_kafka.schema_registry import SchemaRegistryClient, Schema

    # Protobuf schema as a string
    schema_str = """
    syntax = "proto3";

    package com.example;

    message User {
      int32 user_id = 1;
      string user_name = 2;
    }

    message Product {
      string product_id = 1;
      string product_name = 2;
    }
    """

    def main():
        print("Hello from Python!!")

        # Choose which message type to register
        message_type = "User"  # Can be "User" or "Product"

        schema_registry_conf = {"url": "http://confluent-schema-registry-app.kafka:8081"}
        client = SchemaRegistryClient(schema_registry_conf)

        schema = Schema(schema_str, schema_type="PROTOBUF", references=[{"name": f"com.example.{message_type}"}])
        subject_name = f"foo-topic-{message_type.lower()}-value"
        schema_id = client.register_schema(subject_name, schema)

        print(f"Schema for message type '{message_type}' registered with subject '{subject_name}' and ID: {schema_id}")

    if __name__ == "__main__":
        main()
